/* eslint-disable react-hooks/exhaustive-deps */
import React, { useState, useEffect } from 'react';
import { useHistory } from 'react-router-dom';
import Axios from 'axios';
import './Navbar.css';
import { Link } from 'react-router-dom';
import ob_tag from './../../images/ob_icon.png';
import LoginAuthPop from './../Dialog/LoginAuthPop';
import { AuthContext } from './../../helpers/AuthContext';
import ConfirmDialog from './../../components/Dialog/ConfirmDialog';
import { FaCaretDown, FaBars, FaArrowLeft, FaSignOutAlt } from 'react-icons/fa'
export default function Navbar() {
    Axios.defaults.withCredentials = true;
    const history = useHistory(), [errorDialog, setErrorDialog] = useState({ isOpen: !1, title: "", subtitle: "", noButton: "" }), [authState, setAuthState] = useState({ username: "", id: 0, status: !1 }), [confirmDialog, setConfirmDialog] = useState({ isOpen: !1, title: "", subtitle: "", yesButton: "", noButton: "" }), [username, setUsername] = useState(""), [resident_id, setResidentId] = useState(""), [role, setRole] = useState(""), [userId, setUserId] = useState(""), [brgyinfo, setBrgyInfo] = useState([]), [, setFetched] = useState(!1), [accountId, setAccountId] = useState("");
    useEffect(() => { const ac = new AbortController(); Promise.all([Axios.get("http://localhost:3001/login").then((response) => { if (response.data.loggedIn === true) { setUsername(response.data.user[0].username); setAccountId(response.data.user[0].account_id); setResidentId(response.data.user[0].resident_id); setUserId(response.data.user[0].user_id); setRole(response.data.user[0].role) } }), Axios.get("http://localhost:3001/GetBarangayInformation").then((response) => { setBrgyInfo(response.data); }),]).then(() => setFetched(true)).catch(ex => console.error(ex)); return () => ac.abort() }, [])
    useEffect(() => { Axios.get("http://localhost:3001/isUserAuth", { headers: { "x-access-token": localStorage.getItem("token") } }).then((response) => { if (response.data.message) { setAuthState({ ...authState, status: false }) } else { setAuthState({ username: response.data.username, id: response.data.resident_id, status: true }) } }) }, [])
    const signout = () => { setConfirmDialog({ isOpen: true, title: "Sign Out", subtitle: "Are you sure you want to logout?", noButton: <button onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} className="alert_noBtn">No</button>, yesButton: <button onClick={logout} className="alert_yesBtn"> Yes </button> }) }
    const logout = async () => { localStorage.removeItem("token"); setAuthState({ username: "", id: 0, status: false }); try { await Axios.get(`http://localhost:3001/logout`, { params: { username: username, accId: accountId } }).then((response) => { }); localStorage.removeItem('token'); if (window.innerWidth <= 600) { history.push("/"); window.location.reload(); } else { history.push("/login") } } catch (error) { } }
    return (
        <div className="wrapperx">
            <AuthContext.Provider value={{ authState, setAuthState }}>
                <LoginAuthPop errorDialog={errorDialog} setErrorDialog={setErrorDialog} />
                <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />
                <nav className="UserHome_header"> <> <input type="checkbox" id="show-search" /> <input type="checkbox" id="show-menu" /> <label htmlFor="show-menu" className="menu-icon"><i className=""><FaBars /></i></label> <label htmlFor="/" className="menu-icon-back"> <Link to="/home" id="menu-icon-back" style={window.location.pathname === "/home" ? { display: "none" } : { display: "block" }}><FaArrowLeft /></Link> </label> <div className="content"> <div className="logo">{brgyinfo.map((row) => (<img id="uploaded-image" src={`data:image/jpeg;base64,${Buffer.from(row.brgy_image)}`} draggable={false} alt="uploaded-img" className="brgy407_header" />))}<img src={ob_tag} alt={ob_tag} className="ob_icon_header" /> </div><ul className="links"> <li className="li" id="main_li"><Link to="/home" className="home_button_header">Home</Link></li><li className="li" id="main_li"> <p className="desktop-link" id="b" >Documents <i className=''><FaCaretDown /></i></p><input type="checkbox" id="show-features" /> <label htmlFor="show-features">Documents<i className=''><FaCaretDown /></i></label> <ul className='hover_links'> <li className="li" id="sub_li"><Link to="/ApplicationModule" id="a" className="header_links">About Documents</Link></li><li className="li" id="sub_li" style={!authState.status || !resident_id ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}><Link to="/Barangay-Certificates" id="a" className="header_links">Barangay Documents</Link></li></ul> </li><li className="li" id="main_li"> <p className="desktop-link" id="b">Emergency & Reports <i className=''><FaCaretDown /></i></p><input type="checkbox" id="show-services" /> <label htmlFor="show-services">Emergency & Reports <i className=''><FaCaretDown /></i></label> <ul> <li className="li" id="sub_li"><Link to="/CIEModule" className="header_links" id="a">About Emergency & Reports</Link></li><li className="li" id="sub_li"><Link to="/EmergencyIncidentReport" className="header_links" id="a" style={!authState.status || !resident_id ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}>File An Incident Report</Link></li><li className="li" id="sub_li"><Link to="/Submit-Complain-Report" className="header_links" id="a" style={!authState.status || !resident_id ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}>Send A Complaint Report</Link></li></ul> </li><li className="li" id="main_li"> <p className="desktop-link" id="b">Reserve & Request <i className=''><FaCaretDown /></i></p><input type="checkbox" id="show-rr" /> <label htmlFor="show-rr">Reservation & Request <i className=''><FaCaretDown /></i></label> <ul> <li className="li" id="sub_li"><Link to="/Reservation-Module" id="a" className="header_links">About Reserve & Request</Link></li><li className="li" id="sub_li"><Link to="/RequestUtilities" id="a" className="header_links" style={!authState.status || !resident_id ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}>Request & Reserve Facility</Link></li></ul> </li><li className="li" id="main_li"> <p className="desktop-link" id="b">Feedback <i className=''><FaCaretDown /></i></p><input type="checkbox" id="show-forum" /> <label htmlFor="show-forum">Feedback <i className=''><FaCaretDown /></i></label> <ul> <li className="li" id="sub_li"><Link to="/FAQs" id="a" className="header_links">Frequently Asked Questions</Link></li><li className="li" id="sub_li"><Link to="/Feedbacks" id="a" className="header_links" style={!authState.status || !resident_id ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}>Feedback & Suggestions</Link></li></ul> </li><li className="li" id="main_li"> <p className="desktop-link" id="b" >Programs & Anouncements <i className=''><FaCaretDown /></i></p><input type="checkbox" id="show-programs" /> <label htmlFor="show-programs">Programs & Anouncements <i className=''><FaCaretDown /></i></label> <ul> <li className="li" id="sub_li"><Link to="/announcements" id="a" className="header_links">Announcements</Link></li><li className="li" id="sub_li"><Link to="/brgy-programs&events" id="a" className="header_links">Programs & Events</Link></li></ul> </li><li className="li" id="main_li"> <p className="desktop-link" id="b">{!resident_id && !userId ? "Guest" : username}<i className=''><FaCaretDown /></i></p><input type="checkbox" id="show-profile" /> <label htmlFor="show-profile">{!resident_id && !userId ? "Guest" : username}<i className=''><FaCaretDown /></i> </label> <ul>{!resident_id && !userId ? <> <li className="li" id="sub_li"><Link to="/register" id="a" className="header_links">Register</Link></li><li className="li" id="sub_li"><Link to="/login" id="a" className="header_links">Login</Link></li></> : <> <li className="li" id="sub_li"><Link to="/MyProfile" id="a" className="header_links" style={!authState.status ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}>My Profile</Link></li><li className="li" id="sub_li"><Link to="/MyApplication" id="a" className="header_links" style={!authState.status || !resident_id ? { backgroundColor: "gray", pointerEvents: "none" } : { backgroundColor: "", pointerEvents: "" }}>My Application</Link></li><li className="li" id="sub_li"><Link to="/login" id="a" className="header_links" onClick={logout}>{!authState.status ? "Back to Login" : "Logout"}</Link></li></>}</ul> </li></ul> </div></> <label htmlFor="/" className="menu-icon-logout"><button id="logout" className='logout_responsive_btn' onClick={signout}><i className=""><FaSignOutAlt /></i> </button></label> <label htmlFor="show-search" className=""></label> </nav>
                {role === "Admin" && history.push("/AdminHome")}
                {role === "TechAdmin" && history.push("/technical-admin")}
            </AuthContext.Provider>
        </div>
    )
}