/* eslint-disable no-lone-blocks */
import React, { useState } from 'react'
import { useHistory } from 'react-router-dom';
import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, TablePagination, TableFooter } from '@material-ui/core';
import { makeStyles } from '@material-ui/core/styles';
import { FaEdit, FaArchive } from 'react-icons/fa';
import Axios from 'axios'
import './PendingTable.css'
import Notification from '../../Dialog/Notification';
import ConfirmDialog from '../../Dialog/ConfirmDialog';
import ViewEditDialog from '../../Dialog/ViewEditDialog';
import SuccessDialog from '../../Dialog/SuccessDialog'
import SuccessRegisterDialog from '../../Dialog/SuccessRegisterDialog';
import PopUp from '../../Dialog/PopUp';
import Moment from "react-moment";

const useStyles = makeStyles((theme) => ({ table: { minWidth: 200, }, tableContainer: { maxWidth: 1175, borderRadius: 0, border: "0.5px solid #d5dbd9" }, tableHeaderCell: { fontWeight: 'bold', backgroundColor: '#0061a8', color: theme.palette.getContrastText(theme.palette.primary.dark), fontFamily: "Montserrat, sans-serif", cursor: "pointer", lineHeight: "1.43", paddingTop: "15px", paddingBottom: "15px" }, tableCell: { fontFamily: "Montserrat, sans-serif", cursor: "pointer", }, avatar: { backgroundColor: theme.palette.primary.light, color: theme.palette.getContrastText(theme.palette.primary.light) }, name: { cursor: "pointer", fontWeight: 'bold', color: "#2e4a56", fontFamily: "Montserrat, sans-serif" }, residentIdTitle: { fontSize: "15px" }, status: { fontWeight: 'bold', fontSize: '0.75rem', color: 'white', backgroundColor: 'grey', borderRadius: 5, padding: '3px 10px', display: 'inline-block', fontFamily: "Montserrat, sans-serif", }, pagination: { overflow: "hidden" } }))

const DeclinedTable = ({ data }) => {
    Axios.defaults.withCredentials = true;
    const history = useHistory(), [confirmDialog, setConfirmDialog] = useState({ isOpen: !1, title: "", subtitle: "", yesButton: "", noButton: "" }), [successRegisterDialog, setSuccessRegisterDialog] = useState({ isOpen: !1, title: "", subtitle: "", yesButton: "", noButton: "" }), [notify, setNotify] = useState({ isOpen: !1, message: "", type: "" }), [viewEditDialog, setViewEditDialog] = useState({ isOpen: !1, title: "", subtitle: "", yesButton: "", noButton: "" }), [successDialog, setSuccessDialog] = useState({ isOpen: !1, title: "", subtitle: "", yesButton: "", noButton: "" }), classes = useStyles(), [request_id, setRequestId] = useState(""), [first_name, setFirstName] = useState(""), [middle_name, setMiddleName] = useState(""), [last_name, setLastName] = useState(""), [suffix, setSuffix] = useState(""), [complete_address, setCompleteAddress] = useState(""), [sex, setSex] = useState(""), [birthdate, setBirthdate] = useState(""), [purpose, setPurpose] = useState(""), [years_resided, setYearsResided] = useState(""), [document_type, setDocumentType] = useState(""), [contact_person, setContactPerson] = useState(""), [contact_address, setContactAddress] = useState(""), [contact_contact, setContactContact] = useState(""), [business_name, setBusinessName] = useState(""), [business_address, setBusinessAddress] = useState(""), [business_type, setBusinessType] = useState(""), [business_status, setBusinessStatus] = useState(""), [vehicle, setVehicle] = useState(""), [vehicle_type, setVehicleType] = useState(""), [plate_no, setPlateNo] = useState(""), [destination, setDestination] = useState(""), [departure_date, setDepartureDate] = useState(""), [date_requested, setDateRequested] = useState(""), [date_declined, setDateDeclined] = useState(""), [civil_status, setCivilStatus] = useState(""), [remarks, setRemarks] = useState(""), [openPopup, setOpenPopup] = useState(!1), refresh = () => { setSuccessDialog({ ...successDialog, isOpen: !1 }); history.push("/document-requests") }, [page, setPage] = useState(0), [rowsPerPage, setRowsPerPage] = useState(5), handleChangePage = (event, newPage) => { setPage(newPage); }, handleChangeRowsPerPage = (event) => { setRowsPerPage(+event.target.value); setPage(0); }, [tin, setTIN] = useState(""), [sss, setSSS] = useState(""), [birthplace, setBirthplace] = useState("")
    function openInPopup(vehicle, request, document_type, date_requested, purpose, first_name, middle_name, last_name, suffix, address, gender, birthdate, civil_status, contact_person, contact_address, contact_contact, business_name, business_address, business_type, business_status, years_resided, vehicle_type, plate_no, destination, departure_date, remarks, date_declined, birthplace, SSS, TIN) { if (document_type === 1) { setDocumentType("Certificate Of Indigency") } else if (document_type === 2) { setDocumentType("Business Clearance") } else if (document_type === 3) { setDocumentType("Barangay ID") } else if (document_type === 4) { setDocumentType("Good Moral") } else if (document_type === 5) { setDocumentType("Travel Pass") } setVehicle(vehicle); setOpenPopup(true); setRequestId(request); setDateRequested(date_requested); setPurpose(purpose); setFirstName(first_name); setMiddleName(middle_name); setLastName(last_name); setSuffix(suffix); setCompleteAddress(address); setSex(gender); setBirthdate(birthdate); setCivilStatus(civil_status); setContactPerson(contact_person); setContactAddress(contact_address); setContactContact(contact_contact); setBusinessName(business_name); setBusinessAddress(business_address); setBusinessType(business_type); setBusinessStatus(business_status); setYearsResided(years_resided); setVehicleType(vehicle_type); setPlateNo(plate_no); setDestination(destination); setDepartureDate(departure_date); setRemarks(remarks); setDateDeclined(date_declined); setBirthplace(birthplace); setSSS(SSS); setTIN(TIN) }
    const setDelete = (request_id, document_type) => { setConfirmDialog({ ...confirmDialog, isOpen: false }); Axios.delete(`http://localhost:3001/deletedocumentrequest/${request_id}/${document_type}`); setNotify({ isOpen: true, message: "Request Deleted", type: "success" }); setSuccessDialog({ isOpen: true, title: "Updated Success!", subtitle: "Document updated successfully.", noButton: <button onClick={() => refresh()} className="alert_backBtn">Back</button> }) }
    const delete_request = (request_id, document_type) => { setConfirmDialog({ isOpen: true, title: "Delete Confirmation", subtitle: "Are you sure you want to delete this request?", noButton: <button onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} className="alert_noBtn">No</button>, yesButton: <button onClick={() => setDelete(request_id, document_type)} className="alert_yesBtn"> Yes </button> }) }
    return (
        <div>
            <SuccessDialog successDialog={successDialog} setSuccessDialog={setSuccessDialog} />
            <SuccessRegisterDialog successRegisterDialog={successRegisterDialog} setSuccessRegisterDialog={setSuccessRegisterDialog} />
            <Notification notify={notify} setNotify={setNotify} />
            <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog} />
            <ViewEditDialog viewEditDialog={viewEditDialog} setViewEditDialog={setViewEditDialog} />
            <PopUp title="Declined Request" openPopup={openPopup} setOpenPopup={setOpenPopup}> <div className="generate-certificate-body"> <div className="generate-certificate-container">{document_type === "Certificate Of Indigency" ? <div> <div className="wrapper" id="wrapper_profile"> <div className="generate_certificate_title"> <h1> Certificate Of Indigency Request </h1> </div><div className="forms"> <div className="input_fields"> <label>First Name</label> <input type="text" className="inputs" value={first_name} disabled /> </div><div className="input_fields"> <label>Middle Name</label> <input type="text" className="inputs" value={middle_name} disabled /> </div><div className="input_fields"> <label>Last Name</label> <input type="text" className="inputs" value={last_name} disabled /> </div><div className="input_fields"> <label>Suffix</label> <input type="text" className="inputs" value={suffix} disabled /> </div><div className="input_fields"> <label>Address</label> <textarea className="textarea" value={complete_address} disabled></textarea> </div><div className="input_fields"> <label>Gender</label> <input type="text" className="inputs" value={sex} disabled /> </div><div className="input_fields"> <label>Years Resided in the Barangay</label> <input type="text" className="inputs" value={years_resided} disabled /> </div><div className="input_fields"> <label>Purpose</label> <input type="text" className="inputs" value={purpose} disabled /> </div><div className="input_fields"> <label>Date Requested</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_requested} /></p></div><div className="input_fields"> <label>Date Declined</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_declined} /></p></div><div className="input_fields"> <label>Remarks</label> <textarea type="text" className="textarea" value={remarks} disabled /> </div></div></div></div> : ""}{document_type === "Barangay ID" ? <div> <div className="wrapper" id="wrapper_profile"> <div className="generate_certificate_title"> <h1> Barangay ID Request </h1> </div><div className="forms"> <div className="input_fields"> <label>First Name</label> <input type="text" className="inputs" value={first_name} disabled /> </div><div className="input_fields"> <label>Middle Name</label> <input type="text" className="inputs" value={middle_name} disabled /> </div><div className="input_fields"> <label>Last Name</label> <input type="text" className="inputs" value={last_name} disabled /> </div><div className="input_fields"> <label>Suffix</label> <input type="text" className="inputs" value={suffix} disabled /> </div><div className="input_fields"> <label>Address</label> <textarea className="textarea" value={complete_address} disabled></textarea> </div><div className="input_fields"> <label>Gender</label> <input type="text" className="inputs" value={sex} disabled /> </div><div className="input_fields"> <label>Birthdate</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={birthdate} /></p></div><div className="input_fields">
                <label>
                    Birthplace
                    <span className="required_symbol">*</span>
                </label>
                <input
                    type="text"
                    className="inputs"
                    disabled
                    defaultValue={birthplace}
                    autoComplete="off"
                />
            </div>
                <div className="input_fields">

                    <label>
                        Civil Status
                        <span className="required_symbol">*</span>
                    </label>
                    <input
                        type="text"
                        className="inputs"
                        disabled
                        defaultValue={civil_status}
                        autoComplete="off"
                    />
                </div>
                <div className="input_fields">

                    <label>
                        SSS No.
                        <span className="required_symbol">*</span>
                    </label>
                    <input
                        type="text"
                        className="inputs"
                        defaultValue={sss}
                        disabled
                        autoComplete="off"
                    />
                </div>
                <div className="input_fields">

                    <label>
                        TIN No.
                        <span className="required_symbol">*</span>
                    </label>
                    <input
                        type="text"
                        className="inputs"
                        defaultValue={tin}
                        disabled
                        autoComplete="off"
                    />
                </div> <div className="input_fields"> <label>Purpose</label> <input className="inputs" value={purpose} disabled /> </div><p className="person_to_contact"> Person to contact in case of emergency </p><div className="input_fields"> <label>Full Name</label> <input className="inputs" value={contact_person} disabled /> </div><div className="input_fields"> <label>Address</label> <textarea className="textarea" value={contact_address} disabled></textarea> </div><div className="input_fields"> <label>Contact No</label> <input className="inputs" value={contact_contact} disabled /> </div><div className="input_fields"> <input type="submit" value="Generate" className="btn" /> </div><div className="input_fields"> <label>Date Requested</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_requested} /></p></div><div className="input_fields"> <label>Date Declined</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_declined} /></p></div><div className="input_fields"> <label>Remarks</label> <textarea type="text" className="textarea" value={remarks} disabled /> </div></div></div></div> : ""}{document_type === "Good Moral" ? <div> <div className="wrapper" id="wrapper_profile"> <div className="generate_certificate_title"> <h1> Good Moral Request </h1> </div><div className="forms"> <div className="input_fields"> <label>First Name</label> <input type="text" className="inputs" value={first_name} disabled /> </div><div className="input_fields"> <label>Middle Name</label> <input type="text" className="inputs" value={middle_name} disabled /> </div><div className="input_fields"> <label>Last Name</label> <input type="text" className="inputs" value={last_name} disabled /> </div><div className="input_fields"> <label>Suffix</label> <input type="text" className="inputs" value={suffix} disabled /> </div><div className="input_fields"> <label>Address</label> <textarea className="textarea" value={complete_address} disabled></textarea> </div><div className="input_fields"> <label>Gender</label> <input type="text" className="inputs" value={sex} disabled /> </div><div className="input_fields"> <label>Purpose</label> <input className="inputs" value={purpose} disabled /> </div><div className="input_fields"> <label>Date Requested</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_requested} /></p></div><div className="input_fields"> <label>Date Declined</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_declined} /></p></div><div className="input_fields"> <label>Remarks</label> <textarea type="text" className="textarea" value={remarks} disabled /> </div></div></div></div> : ""}{document_type === "Business Clearance" ? <div> <div className="wrapper" id="wrapper_profile"> <div className="generate_certificate_title"> <h1> Business Clearance Request </h1> </div><div className="forms"> <div className="input_fields"> <label>First Name</label> <input type="text" className="inputs" value={first_name} disabled /> </div><div className="input_fields"> <label>Middle Name</label> <input type="text" className="inputs" value={middle_name} disabled /> </div><div className="input_fields"> <label>Last Name</label> <input type="text" className="inputs" value={last_name} disabled /> </div><div className="input_fields"> <label>Suffix</label> <input type="text" className="inputs" value={suffix} disabled /> </div><div className="input_fields"> <label>Name of Business</label> <input type="text" className="inputs" value={business_name} disabled /> </div><div className="input_fields"> <label>Business Address</label> <textarea className="textarea" value={business_address} disabled></textarea> </div><div className="input_fields"> <label>Type of Business</label> <input type="text" className="inputs" value={business_type} disabled /> </div><div className="input_fields"> <label>Business Status</label> <input type="text" className="inputs" value={business_status} disabled /> </div><div className="input_fields"> <label>Date Requested</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_requested} /></p></div><div className="input_fields"> <label>Date Declined</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_declined} /></p></div><div className="input_fields"> <label>Remarks</label> <textarea type="text" className="textarea" value={remarks} disabled /> </div></div></div></div> : ""}{document_type === "Travel Pass" ? <div> <div className="wrapper" id="wrapper_profile"> <div className="generate_certificate_title"> <h1> Travel Pass Request </h1> </div><div className="forms"> <div className="input_fields"> <label>First Name</label> <input type="text" className="inputs" value={first_name} disabled /> </div><div className="input_fields"> <label>Middle Name</label> <input type="text" className="inputs" value={middle_name} disabled /> </div><div className="input_fields"> <label>Last Name</label> <input type="text" className="inputs" value={last_name} disabled /> </div><div className="input_fields"> <label>Suffix</label> <input type="text" className="inputs" value={suffix} disabled /> </div><div className="input_fields"> <label>Address</label> <textarea className="textarea" value={complete_address} disabled></textarea> </div><div className="input_fields"> <label>Vehicle</label> <input type="text" className="inputs" value={vehicle} disabled /> </div>{vehicle === "Yes" ? <> <div className="input_fields"> <label>Vehicle Type</label> <input type="text" className="inputs" value={vehicle_type} disabled /> </div><div className="input_fields"> <label>Plate No.</label> <input type="text" className="inputs" value={plate_no} disabled /> </div></> : ""}<div className="input_fields"> <label>Destination</label> <input type="text" className="inputs" value={destination} disabled /> </div><div className="input_fields"> <label>Departure Date</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={departure_date} /></p></div><div className="input_fields"> <label>Purpose</label> <input type="text" className="inputs" value={purpose} disabled /> </div><div className="input_fields"> <label>Date Requested</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_requested} /></p></div><div className="input_fields"> <label>Date Declined</label> <p className="inputs"><Moment format={"MMMM DD, YYYY"} date={date_declined} /></p></div><div className="input_fields"> <label>Remarks</label> <textarea type="text" className="textarea" value={remarks} disabled /> </div></div></div></div> : ""}</div></div></PopUp>
            <TableContainer component={Paper} className={classes.tableContainer}> <Table className={classes.table} aria-label="simple table"> <TableHead > <TableRow className={classes.tableRow}> <TableCell className={classes.tableHeaderCell}>Last Name</TableCell> <TableCell className={classes.tableHeaderCell}>First Name</TableCell> <TableCell className={classes.tableHeaderCell}>Middle Name</TableCell> <TableCell className={classes.tableHeaderCell}>Type of Document</TableCell> <TableCell className={classes.tableHeaderCell}>Status</TableCell> <TableCell className={classes.tableHeaderCell} id="table_hidden">Action</TableCell> </TableRow> </TableHead> <TableBody>{data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => { return (<TableRow> <TableCell key={index[0]} onClick={() => openInPopup(row.vehicle, row.request, row.document_type, row.date_requested, row.purpose, row.first_name, row.middle_name, row.last_name, row.suffix, row.address, row.gender, row.birthdate, row.civil_status, row.contact_person, row.contact_address, row.contact_contact, row.business_name, row.business_address, row.business_type, row.business_status, row.years_resided, row.vehicle_type, row.plate_no, row.destination, row.departure_date, row.remarks, row.date_declined, row.birthplace, row.SSS, row.TIN)} id="last_name"> <Typography key={index[1]} className={classes.name}>{row.last_name}</Typography> </TableCell> <TableCell key={index[2]} onClick={() => openInPopup(row.vehicle, row.request, row.document_type, row.date_requested, row.purpose, row.first_name, row.middle_name, row.last_name, row.suffix, row.address, row.gender, row.birthdate, row.civil_status, row.contact_person, row.contact_address, row.contact_contact, row.business_name, row.business_address, row.business_type, row.business_status, row.years_resided, row.vehicle_type, row.plate_no, row.destination, row.departure_date, row.remarks, row.date_declined, row.birthplace, row.SSS, row.TIN)}> <Typography key={index[3]} className={classes.name}>{row.first_name}</Typography> </TableCell> <TableCell key={index[4]} onClick={() => openInPopup(row.vehicle, row.request, row.document_type, row.date_requested, row.purpose, row.first_name, row.middle_name, row.last_name, row.suffix, row.address, row.gender, row.birthdate, row.civil_status, row.contact_person, row.contact_address, row.contact_contact, row.business_name, row.business_address, row.business_type, row.business_status, row.years_resided, row.vehicle_type, row.plate_no, row.destination, row.departure_date, row.remarks, row.date_declined, row.birthplace, row.SSS, row.TIN)}> <Typography key={index[5]} className={classes.name}>{row.middle_name}</Typography> </TableCell> <TableCell key={index[6]} className={classes.tableCell} onClick={() => openInPopup(row.vehicle, row.request, row.document_type, row.date_requested, row.purpose, row.first_name, row.middle_name, row.last_name, row.suffix, row.address, row.gender, row.birthdate, row.civil_status, row.contact_person, row.contact_address, row.contact_contact, row.business_name, row.business_address, row.business_type, row.business_status, row.years_resided, row.vehicle_type, row.plate_no, row.destination, row.departure_date, row.remarks, row.date_declined, row.birthplace, row.SSS, row.TIN)}>{row.document_type === 5 ? "Travel Pass" : "" || row.document_type === 4 ? "Good Moral" : "" || row.document_type === 3 ? "Barangay ID" : "" || row.document_type === 2 ? "Business Clearance" : "" || row.document_type === 1 ? "Certificate Of Indigency" : ""}</TableCell> <TableCell key={index[7]} onClick={() => openInPopup(row.vehicle, row.request, row.document_type, row.date_requested, row.purpose, row.first_name, row.middle_name, row.last_name, row.suffix, row.address, row.gender, row.birthdate, row.civil_status, row.contact_person, row.contact_address, row.contact_contact, row.business_name, row.business_address, row.business_type, row.business_status, row.years_resided, row.vehicle_type, row.plate_no, row.destination, row.departure_date, row.remarks, row.date_declined, row.birthplace, row.SSS, row.TIN)}> <Typography key={index[8]} className={classes.status} style={{ backgroundColor: ((row.status === "Processed" && 'green') || (row.status === "Pending" && '#F29339')) }}>{row.status}</Typography> </TableCell> <TableCell key={index[9]} id="table_hidden"> <button className="view_edit" onClick={() => openInPopup(row.vehicle, row.request, row.document_type, row.date_requested, row.purpose, row.first_name, row.middle_name, row.last_name, row.suffix, row.address, row.gender, row.birthdate, row.civil_status, row.contact_person, row.contact_address, row.contact_contact, row.business_name, row.business_address, row.business_type, row.business_status, row.years_resided, row.vehicle_type, row.plate_no, row.destination, row.departure_date, row.remarks, row.date_declined, row.birthplace, row.SSS, row.TIN)}><FaEdit /></button> <button className="view_edit" style={{ background: "#0061a8" }} onClick={() => delete_request(row.request, row.document_type)}> <FaArchive /></button> </TableCell> </TableRow>) })}</TableBody> <TableFooter> <TablePagination rowsPerPageOptions={[5, 10, 15]} component="span" count={data.length} rowsPerPage={rowsPerPage} page={page} onPageChange={handleChangePage} onRowsPerPageChange={handleChangeRowsPerPage} className={classes.pagination} /> </TableFooter> </Table> </TableContainer>
        </div >
    )
}

export default DeclinedTable
